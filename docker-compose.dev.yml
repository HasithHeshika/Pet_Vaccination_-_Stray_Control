name: pet-management-system-dev

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: pet-management-mongodb-dev
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-admin123}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE:-pet_management}
    ports:
      - "${MONGO_PORT:-27017}:27017"
    volumes:
      - mongodb_data_dev:/data/db
    networks:
      - pet-management-network-dev

  # Backend API (Development mode with hot reload)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: pet-management-backend-dev
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: ${BACKEND_PORT:-5000}
      MONGODB_URI: mongodb://${MONGO_ROOT_USERNAME:-admin}:${MONGO_ROOT_PASSWORD:-admin123}@mongodb:27017/${MONGO_DATABASE:-pet_management}?authSource=admin
      JWT_SECRET: ${JWT_SECRET:-dev-jwt-secret-key}
      ADMIN_EMAIL: ${ADMIN_EMAIL:-admin@petmanagement.com}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD:-Admin@123}
    ports:
      - "${BACKEND_PORT:-5000}:5000"
    depends_on:
      - mongodb
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - pet-management-network-dev
    command: npm run dev

  # Frontend (Development mode with hot reload)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: pet-management-frontend-dev
    restart: unless-stopped
    environment:
      REACT_APP_API_URL: ${REACT_APP_API_URL:-http://localhost:5000}
      WATCHPACK_POLLING: "true"
      CHOKIDAR_USEPOLLING: "true"
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - pet-management-network-dev
    stdin_open: true
    tty: true

networks:
  pet-management-network-dev:
    driver: bridge

volumes:
  mongodb_data_dev:
    driver: local
